<Button
	x:Class="BlueStacks.MicroInstaller.StrippedButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:BlueStacks.MicroInstaller" xmlns:Common="clr-namespace:BlueStacks.Common"
	Name="mButton"
	Content="Hello World"
	Style="{DynamicResource ButtonStyle1}"
	FocusVisualStyle="{x:Null}"
	MouseEnter="mButton_LayoutUpdated"
	MouseLeave="mButton_LayoutUpdated"
	PreviewMouseDown="mButton_MouseDown"
	MouseDown="mButton_MouseDown"
	IsEnabledChanged="mButton_IsEnabledChanged">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<DataTemplate
				x:Key="TextContentTemplate">
				<TextBlock
					Name="wrapTextBlock"
					TextAlignment="Left"
					TextWrapping="Wrap"
					Text="{Binding}"
					MaxWidth="{Binding MaxWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
			</DataTemplate>
			<Style
				TargetType="{x:Type Button}"
				x:Key="ButtonStyle1">
				<Setter
					Property="Background"
					Value="{Binding ElementName=mButton, Path=Background}" />
				<Setter
					Property="BorderBrush"
					Value="{Binding ElementName=mButton, Path=BorderBrush}" />
				<Setter
					Property="BorderThickness"
					Value="2" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="FontSize"
					Value="16" />
				<Setter
					Property="FontWeight"
					Value="SemiBold" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Button}">
							<!--Unknown connection ID: 2-->
							<Border
								Name="buttonHoverBorder"
								SnapsToDevicePixels="True"
								Visibility="Visible"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<!--Unknown connection ID: 3-->
								<Border
									Name="buttonBorder"
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									Margin="-0.45">
									<Grid
										HorizontalAlignment="Center"
										VerticalAlignment="Center">
										<Grid.RowDefinitions>
											<RowDefinition
												Height="2*" />
											<RowDefinition
												Height="11*" />
											<RowDefinition
												Height="2*" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												Width="{Binding ElementName=mButton, Path=ActualHeight, ConverterParameter=0.5, Converter={Common:XamlSizeConverter}}" />
											<ColumnDefinition
												Width="Auto" />
											<ColumnDefinition
												Width="{Binding ElementName=mButton, Path=ActualHeight, ConverterParameter=0.5, Converter={Common:XamlSizeConverter}}" />
										</Grid.ColumnDefinitions>
										<Grid
											Row="1"
											Column="1">
											<Grid.ColumnDefinitions>
												<ColumnDefinition
													Width="Auto" />
												<ColumnDefinition
													Width="Auto" />
											</Grid.ColumnDefinitions>
											<ContentPresenter
												Name="Chrome"
												TextBlock.FontWeight="{TemplateBinding FontWeight}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												Margin="{TemplateBinding Padding}"
												Grid.Column="1"
												RecognizesAccessKey="True"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
										</Grid>
									</Grid>
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="buttonHoverBorder"
										Property="Visibility"
										Value="Visible" />
									<Setter
										TargetName="buttonBorder"
										Property="Visibility"
										Value="Visible" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
</Button>
